{"version":3,"sources":["components/Student.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","Student","paperStyle","padding","width","useState","name","setName","address","setAddress","students","setStudents","classes","useEffect","fetch","then","res","json","result","Container","Paper","elevation","style","color","className","noValidate","autoComplete","TextField","id","label","variant","fullWidth","value","onChange","e","target","Button","onClick","preventDefault","student","console","log","method","headers","body","JSON","stringify","map","textAlign","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,SAMb,SAASC,IACpB,IAAMC,EAAW,CAACC,QAAQ,YAAaC,MAAM,IAAIL,OAAO,aACxD,EAAoBM,mBAAS,IAA7B,mBAAMC,EAAN,KAAWC,EAAX,KACA,EAA0BF,mBAAS,IAAnC,mBAAMG,EAAN,KAAcC,EAAd,KACA,EAA4BJ,mBAAS,IAArC,mBAAMK,EAAN,KAAeC,EAAf,KACOC,EAAUjB,IAwBnB,OARFkB,qBAAU,WACRC,MAAM,4DACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACG,GACLP,EAAYO,QAGd,IAGE,eAACC,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAOC,UAAW,EAAGC,MAAOpB,EAA5B,UACI,oBAAIoB,MAAO,CAACC,MAAM,QAAlB,SAA2B,mDAEnC,uBAAMC,UAAWZ,EAAQd,KAAM2B,YAAU,EAACC,aAAa,MAAvD,UAEE,cAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,iBAAiBC,QAAQ,WAAWC,WAAS,EAClFC,MAAO1B,EACP2B,SAAU,SAACC,GAAD,OAAK3B,EAAQ2B,EAAEC,OAAOH,UAEhC,cAACL,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,cAAWC,QAAQ,WAAWC,WAAS,EAC5EC,MAAOxB,EACPyB,SAAU,SAACC,GAAD,OAAKzB,EAAWyB,EAAEC,OAAOH,UAEnC,cAACI,EAAA,EAAD,CAAQN,QAAQ,YAAYP,MAAM,YAAYc,QAtChC,SAACH,GACjBA,EAAEI,iBACF,IAAMC,EAAQ,CAACjC,OAAKE,WACpBgC,QAAQC,IAAIF,GACZzB,MAAM,wDAAwD,CAC5D4B,OAAO,OACPC,QAAQ,CAAC,eAAe,oBACxBC,KAAKC,KAAKC,UAAUP,KAErBxB,MAAK,WACNyB,QAAQC,IAAI,yBA4BV,0BAMF,yCAEA,cAACrB,EAAA,EAAD,CAAOC,UAAW,EAAGC,MAAOpB,EAA5B,SAEGQ,EAASqC,KAAI,SAAAR,GAAO,OACnB,eAACnB,EAAA,EAAD,CAAOC,UAAW,EAAGC,MAAO,CAACvB,OAAO,OAAOI,QAAQ,OAAQ6C,UAAU,QAArE,gBACKT,EAAQX,GAAG,uBADhB,QAEOW,EAAQjC,KAAK,uBAFpB,eAGWiC,EAAQ/B,UAHgE+B,EAAQX,YCvDpFqB,MAVf,WACE,OACE,qBAAKzB,UAAU,MAAf,SAEA,cAACvB,EAAD,OCGWiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5a64a3eb.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Container ,Paper,Button} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n     \r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Student() {\r\n    const paperStyle={padding:'50px 20px', width:600,margin:\"20px auto\"}\r\n    const[name,setName]=useState('')\r\n    const[address,setAddress]=useState('')\r\n    const[students,setStudents]=useState([])\r\n     const classes = useStyles();\r\n\r\n  const handleClick=(e)=>{\r\n    e.preventDefault()\r\n    const student={name,address}\r\n    console.log(student)\r\n    fetch(\"https://metaverso-back2.azurewebsites.net/student/add\",{\r\n      method:\"POST\",\r\n      headers:{\"Content-Type\":\"application/json\"},\r\n      body:JSON.stringify(student)\r\n\r\n  }).then(()=>{\r\n    console.log(\"New Student added\")\r\n  })\r\n}\r\n\r\nuseEffect(()=>{\r\n  fetch(\"https://metaverso-back2.azurewebsites.net/student/getAll\")\r\n  .then(res=>res.json())\r\n  .then((result)=>{\r\n    setStudents(result);\r\n  }\r\n)\r\n},[])\r\n  return (\r\n\r\n    <Container>\r\n        <Paper elevation={3} style={paperStyle}>\r\n            <h1 style={{color:\"blue\"}}><u>Adicionar Pessoa</u></h1>\r\n\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n    \r\n      <TextField id=\"outlined-basic\" label=\"Nome da Pessoa\" variant=\"outlined\" fullWidth \r\n      value={name}\r\n      onChange={(e)=>setName(e.target.value)}\r\n      />\r\n      <TextField id=\"outlined-basic\" label=\"Endereço\" variant=\"outlined\" fullWidth\r\n      value={address}\r\n      onChange={(e)=>setAddress(e.target.value)}\r\n      />\r\n      <Button variant=\"contained\" color=\"secondary\" onClick={handleClick}>\r\n  Enviar\r\n</Button>\r\n    </form>\r\n   \r\n    </Paper>\r\n    <h1>Pessoas</h1>\r\n\r\n    <Paper elevation={3} style={paperStyle}>\r\n\r\n      {students.map(student=>(\r\n        <Paper elevation={6} style={{margin:\"10px\",padding:\"15px\", textAlign:\"left\"}} key={student.id}>\r\n         Id:{student.id}<br/>\r\n         Nome:{student.name}<br/>\r\n         Endereço:{student.address}\r\n        </Paper>\r\n      ))\r\n}\r\n\r\n\r\n    </Paper>\r\n\r\n\r\n\r\n    </Container>\r\n  );\r\n}\r\n","\r\nimport './App.css';\r\n\r\nimport Student from './components/Student'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n\r\n    <Student/>\r\n   \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}